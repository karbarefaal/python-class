# تابع معمولی
def square(x):
    return x ** 2

print(square(5))  # خروجی: 25

#================================================

# تابع lambda معادل
square_lambda = lambda x: x ** 2
print(square_lambda(5))  # خروجی: 25


#=================================================

numbers = [1, 2, 3, 4, 5]

# مربع گرفتن با map و lambda
squares = list(map(lambda x: x**2, numbers))
print(squares)  # خروجی: [1, 4, 9, 16, 25]

#==================================================

numbers = [10, 15, 20, 25, 30]

# فقط اعداد زوج
evens = list(filter(lambda x: x % 2 == 0, numbers))
print(evens)  # خروجی: [10, 20, 30]

#===================================================

names = ["Ali", "Sara", "Reza"]
scores = [18, 20, 17]

# ترکیب دو لیست
result = list(zip(names, scores))
print(result)
# خروجی: [('Ali', 18), ('Sara', 20), ('Reza', 17)]

#===================================================

# نوشتن تابع lambda برای محاسبه توان سوم یک عدد.

# استفاده از map برای محاسبه قدرمطلق لیستی از اعداد منفی و مثبت.

# استفاده از filter برای گرفتن اعدادی که بزرگ‌تر از ۱۰ هستند.

# استفاده از zip برای ساخت دیکشنری از دو لیست: کلیدها (نام‌ها) و مقدارها (نمرات).